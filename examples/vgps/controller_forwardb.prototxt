name: "JointAndImageStateRegressionNet"
layers {
  name: "data_in"
  type: MEMORY_DATA
  top: "image_features"
  top: "joint_input"
  top: "zzzzzzzzzz"
  top: "zzzzzzzzz"
  memory_data_param {
    batch_size: 1
    channels1: 40
    channels2: 21
  }
}

# Concat image layers and joint states
layers {
  name: "concat_img_joint"
  type: CONCAT
  bottom: "joint_input"
  bottom: "image_features"
  top: "concat_img_joint"
}

layers {
  name: "relu_both"
  type: RELU
  bottom: "concat_img_joint"
  top: "jirelu"
}
layers {
  name: "fc1_both"
  type: INNER_PRODUCT
  bottom: "jirelu"
  top: "fc1_both"
  blobs_lr: 5
  blobs_lr: 10
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "relu2_both"
  type: RELU
  bottom: "fc1_both"
  top: "fc1relu_both"
}
layers {
  name: "fc2_both"
  type: INNER_PRODUCT
  bottom: "fc1relu_both"
  top: "fc2_both"
  blobs_lr: 5
  blobs_lr: 10
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 40
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "fc3_both"
  type: INNER_PRODUCT
  bottom: "fc2_both"
  top: "nn_output"
  blobs_lr: 5
  blobs_lr: 10
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 7
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
