name: "JointAndImageStateRegressionNet"
layer {
  name: "data"
  type: "HDF5Data"
  top: "rgb_frames+0" # needs to be not +0 for trial_images.txt
  #top: "resize_grad+0" # needs to be not +0 for trial_images.txt
  hdf5_data_param {
    #source: "/home/cfinn/code/caffe/examples/vgps/val_pose_smooth.txt"
    source: "/home/cfinn/fpcontrol/trial_images.txt"
    batch_size: 100 #49
  }
  include: {
    phase: TEST
  }
}
# Image Processing Layers
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "rgb_frames+0"
  top: "conv1"
  param {
    lr_mult: 0 #1
    decay_mult: 0 #2
  }
  param {
    lr_mult: 0 #2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv1"
  top: "conv1_bn"
  name: "conv1_bn"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats : true  # false for training, true for test
    moving_average_fraction : 0.5
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1_bn"
  top: "conv1_bn"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1_bn"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 2
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv2"
  top: "conv2_bn"
  name: "conv2_bn"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats : true  # false for training, true for test
    moving_average_fraction : 0.5
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2_bn"
  top: "conv2_bn"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2_bn"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 2
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16 #32
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3"
  top: "conv3_bn"
  name: "conv3_bn"
  type: "BatchNorm"
  batch_norm_param {
    use_global_stats : true  # false for training, true for test
    moving_average_fraction : 0.5
  }
}
layer {
  bottom: "conv3_bn"
  top: "conv3_bn"
  name: "conv3bn_reshape"
  type: "Reshape"
  reshape_param {
    shape {
      dim: 100 #49
      dim: 1
      dim: 1744 #872 # 109*8 # number of feature points
      dim: 109
    }
  }
}
layer {
  name: "conv3b_bn"
  type: "Convolution"
  bottom: "conv3_bn"
  top: "conv3b"
  param {
    lr_mult: 0.01
    decay_mult: 0
  }
  param {
    lr_mult: 0.02
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "constant"
      value: 10
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conv3b"
  top: "conv3b"
  name: "conv3b_reshape"
  type: "Reshape"
  reshape_param {
    shape {
      dim: 100 #49
      dim: 16 #32 # number of feature points
      dim: 109
      dim: 109
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3b"
  top: "conv3b"
}
layer {
  name: "softmax"
  type: "SpatialSoftmax"
  bottom: "conv3b"
  top: "conv3b"
  spatial_softmax_param {
    engine: CAFFE
    temperature: 1.0
#    dimension: "spatial"
  }
}
layer {
  name: "fc_images"
  type: "InnerProduct"
  bottom: "conv3b"
  top: "fp_xy"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2  # dimensionality will actually be 2*num_channels
    axis: -2
    weight_filler {
      type: "expectation"
      expectation_option: "xy"
      width: 109
      height: 109
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc1_a"
  type: "InnerProduct"
  bottom: "fp_xy"
  top: "reconstruction"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3600
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

# Construct reconstruction target.
# Construct reconstruction target.
layer {
  name: "downsample"
  type: "Convolution"
  bottom: "rgb_frames+0"
  top: "downsampled"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 4
    stride: 4
    weight_filler {
      type: "constant"
      value: 0.00008 # 1/16/3/ 256
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "flatten_down"
  type: "Flatten"
  bottom: "downsampled"
  top: "downsampled"
}

# Loss function for reconstruction
layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "reconstruction"
  bottom: "downsampled"
  top: "euclidean_error"
  loss_weight: 1
}


layer {
  name: "output_data"
  type: "HDF5Output"
  hdf5_output_param {
    #file_name: "/home/cfinn/fpcontrol/ricebowl_09-08_output16smooth_autoencoder.h5"
    file_name: "/home/cfinn/fpcontrol/ricebowl_fp.h5"
  }
  bottom: "conv3b" # whatever the softmax is
  #bottom: "rgb_frames+0"
  bottom: "fp_xy"
  #bottom: "downsampled"
  #bottom: "reconstruction"
}

