name: "CostRegressionNet"
layer {
  name: "data_in"
  type: "MemoryData"
  top: "data_in"
  memory_data_param {
    input_shapes {
      dim: 100  # T
      dim: 32  # dimension of phi
      dim: 1
      dim: 1
    }
  }
  include: {phase:FORWARDA}
  include: {phase:TRAIN} # TRAIN is for computing jacobians
}
layer {
  name: "test_data_in"
  type: "MemoryData"
  top: "enc_all"
  memory_data_param {
    input_shapes {
      dim: 100  # T
      dim: 100  # dimension of Dy
      dim: 1
      dim: 1
    }
  }
  include: {phase:TEST}
}

layer {
  name: "fc_enc1"
  type: "InnerProduct"
  bottom: "data_in"
  top: "enc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    axis: 1  # Input is TxF
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  include: {phase: FORWARDA}
  include: {phase:TRAIN}
  propagate_down: 1
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "enc1"
  top: "enc1"
  include: {phase: FORWARDA}
  include: {phase:TRAIN}
}

layer {
  name: "fc_enc4"
  type: "InnerProduct"
  bottom: "enc1"
  top: "enc_all"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    axis: 1  # Input is TxF
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  include: {phase: FORWARDA}
  include: {phase:TRAIN}
  loss_weight: 0.1
}

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "enc_all"
  top: "Ax"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 100
    axis: 1  # Input is TxF
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  include: {phase:TEST}
}

layer {
  name: "dotproduct1"
  type: "Eltwise"
  bottom: "Ax"
  bottom: "Ax"
  top: "AxAx"
  eltwise_param {
    operation: PROD
  }
  include: {phase:TEST}
}

layer {
  name: "fc_sum"
  type: "InnerProduct"
  bottom: "AxAx"
  top: "all_cost"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1  # Output is cost for every time step - T
    axis: 1  # Input is TxF
    weight_filler {
      type: "constant"
      value: 1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  include: {phase:TEST}
}
